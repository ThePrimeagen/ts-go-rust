{"pageProps":{"post":{"attributes":{"title":"Rustlang - CLI","description":"Lets build the arguments parsing for rust"},"html":"<h3 id=\"rust\">Rust</h3>\n<p>I am going to make the assumption that rust will be a foreign invader to your\nbrain and feel very hard.</p>\n<p>If you stick with rust, you will soon say its the most fun and least fun\nlanguage you have ever worked in.</p>\n<h3 id=\"cli-argument-parsing\">CLI Argument parsing</h3>\n<p>Rust has the best.  Hands down.</p>\n<ul>\n<li>Rust : clap<ul>\n<li>The greatest CLI parser by the mostest</li>\n</ul>\n</li>\n</ul>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"i-use-tmux-btw\">I use tmux, btw</h3>\n<p>Such fast swapping</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"so-to-get-started-lets-create-the-project\">So to get started lets create the project</h3>\n<p>Create it where you like</p>\n<h4 id=\"before-you-get-started\">Before you get started</h4>\n<p><code>cargo add</code> is not a default feature, instead you need to add it.</p>\n<h4 id=\"githubcomkillercupcargo-edit\">github.com/killercup/cargo-edit</h4>\n<p>Install: <a href=\"https://github.com/killercup/cargo-edit\">Cargo Edit</a></p>\n<pre><code class=\"hljs language-bash\">cargo init\ncargo add clap --features=derive\nvim . <span class=\"hljs-comment\"># you can open up other moderately slow editor of your choice</span>\n</code></pre>\n<p>This is the rust time... it will be a bit interesting.</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"project-structure\">Project Structure</h3>\n<p>After cargo init</p>\n<pre><code class=\"hljs language-bash\">.git\n.gitignore\nsrc/main.rs\nCargo.toml\nCargo.lock\n</code></pre>\n<p>Change it</p>\n<pre><code class=\"hljs language-bash\">src/main.rs -&gt; src/bin/projector.rs\nsrc/lib.rs\nsrc/opts.rs\n</code></pre>\n<h3 id=\"lets-program-it\">Lets program it!</h3>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"example-of-the-optsrs\">Example of the opts.rs</h3>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-comment\">// src/opts.rs</span>\n<span class=\"hljs-keyword\">use</span> std::path::PathBuf;\n\n<span class=\"hljs-keyword\">use</span> clap::Parser;\n\n<span class=\"hljs-meta\">#[derive(Parser, Debug)]</span>\n<span class=\"hljs-meta\">#[clap()]</span>\n<span class=\"hljs-keyword\">pub</span> <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">ProjectorOpts</span> {\n\n    <span class=\"hljs-meta\">#[clap(short = &#x27;p&#x27;, long = <span class=\"hljs-string\">&quot;pwd&quot;</span>)]</span>\n    <span class=\"hljs-keyword\">pub</span> pwd: <span class=\"hljs-type\">Option</span>&lt;PathBuf&gt;,\n\n    <span class=\"hljs-meta\">#[clap(short = &#x27;c&#x27;, long = <span class=\"hljs-string\">&quot;config&quot;</span>)]</span>\n    <span class=\"hljs-keyword\">pub</span> config: <span class=\"hljs-type\">Option</span>&lt;PathBuf&gt;,\n\n    <span class=\"hljs-meta\">#[clap(default_value = <span class=\"hljs-string\">&quot;&quot;</span>)]</span>\n    <span class=\"hljs-keyword\">pub</span> operation: <span class=\"hljs-type\">Vec</span>&lt;<span class=\"hljs-type\">String</span>&gt;,\n}\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n","slug":"rust-cli","title":"Rustlang - CLI","section":"The CLI Options","icon":"dumpster-fire","filePath":"/home/runner/work/ts-go-rust/ts-go-rust/lessons/04-cli/C-rust-cli.md","nextSlug":"/ts-go-rust/lessons/cli/discuss","prevSlug":"/ts-go-rust/lessons/cli/golang-cli"}},"__N_SSG":true}