{"pageProps":{"post":{"attributes":{"title":"Typescript Projector","description":"So now its time to create the project"},"html":"<h3 id=\"we-are-entering-into-the-actual-project-part\">We are entering into the actual project part</h3>\n<p>So now its time to do the actual application programming.</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"the-ascii-diagram-again\">The ascii diagram again.</h3>\n<pre><code>                                 v &lt;-- you are here\n   +----------+    +----------+      +----------+    +----------+\n   | cli opts | -&gt; | project  | -+-&gt; |  print   | -&gt; | display  |\n   +----------+    |  config  |  |   +----------+    +----------+\n                   +----------+  |\n                                 |   +----------+    +----------+\n                                 +-&gt; |   add    | -&gt; |   save   |\n                                 |   +----------+    +----------+\n                                 |\n                                 |   +----------+    +----------+\n                                 +-&gt; |    rm    | -&gt; |   save   |\n                                     +----------+    +----------+\n</code></pre>\n<p>So this is where the bulk of the program will exist.</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"so-lets-create-the-file-srcprojectorts\">So lets create the file (src/projector.ts)</h3>\n<pre><code class=\"hljs language-bash\">&gt; src/projector.ts\n</code></pre>\n<p>Lets get a codin!  Also remember, we want to build this is a way that makes it\neasy to test.</p>\n<p>Also, we will build the full projector object (more of a note for me than you)</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"here-is-what-the-code-could-look-like\">Here is what the code could look like</h3>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> fs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;fs&quot;</span>;\n<span class=\"hljs-keyword\">import</span> path <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;path&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ProjectorConfig</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./config&quot;</span>;\n\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">ProjectorData</span> = {\n    <span class=\"hljs-comment\">// todo: if we had other top level items, we could put them here</span>\n    <span class=\"hljs-comment\">// such as settings or links</span>\n    <span class=\"hljs-attr\">projector</span>: {\n        [<span class=\"hljs-attr\">key</span>: <span class=\"hljs-built_in\">string</span>]: {\n            [<span class=\"hljs-attr\">key</span>: <span class=\"hljs-built_in\">string</span>]: <span class=\"hljs-built_in\">string</span>\n        }\n    }\n}\n\n<span class=\"hljs-keyword\">type</span> <span class=\"hljs-title class_\">Value</span> = <span class=\"hljs-built_in\">string</span> | <span class=\"hljs-literal\">undefined</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">DEFAULT_VALUE</span> = {<span class=\"hljs-attr\">projector</span>: {}} <span class=\"hljs-keyword\">as</span> <span class=\"hljs-title class_\">ProjectorData</span>;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Projector</span> {\n    <span class=\"hljs-title function_\">constructor</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">private</span> config: ProjectorConfig,\n                <span class=\"hljs-keyword\">private</span> data: ProjectorData = DEFAULT_VALUE</span>) { }\n\n    <span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-attr\">key</span>: <span class=\"hljs-built_in\">string</span>): <span class=\"hljs-title class_\">Value</span> {\n        <span class=\"hljs-comment\">// pwd</span>\n        <span class=\"hljs-comment\">// dirname(pwd) until empty</span>\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">prev</span>: <span class=\"hljs-title class_\">Value</span> = <span class=\"hljs-literal\">undefined</span>;\n        <span class=\"hljs-keyword\">let</span> curr = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">pwd</span>;\n\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">out</span>: <span class=\"hljs-title class_\">Value</span> = <span class=\"hljs-literal\">undefined</span>;\n        <span class=\"hljs-keyword\">do</span> {\n\n            <span class=\"hljs-keyword\">let</span> val = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">projector</span>[curr]?.[key];\n            <span class=\"hljs-keyword\">if</span> (val !== <span class=\"hljs-literal\">undefined</span>) {\n                out = val;\n                <span class=\"hljs-keyword\">break</span>;\n            }\n\n            prev = curr;\n            curr = path.<span class=\"hljs-title function_\">dirname</span>(curr);\n        } <span class=\"hljs-keyword\">while</span> (prev !== curr);\n\n        <span class=\"hljs-keyword\">return</span> out;\n    }\n\n    <span class=\"hljs-title function_\">setValue</span>(<span class=\"hljs-params\">key: <span class=\"hljs-built_in\">string</span>, value: <span class=\"hljs-built_in\">string</span></span>) {\n        <span class=\"hljs-keyword\">let</span> pwd = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">pwd</span>;\n        <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">projector</span>[pwd]) {\n            <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">projector</span>[pwd] = {};\n        }\n\n        <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">projector</span>[pwd][key] = value;\n    }\n\n    <span class=\"hljs-title function_\">deleteValue</span>(<span class=\"hljs-params\">key: <span class=\"hljs-built_in\">string</span></span>) {\n        <span class=\"hljs-keyword\">delete</span> <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">projector</span>[<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">pwd</span>]?.[key];\n    }\n\n    <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title function_\">fromConfig</span>(<span class=\"hljs-attr\">config</span>: <span class=\"hljs-title class_\">ProjectorConfig</span>): <span class=\"hljs-title class_\">Projector</span> {\n        <span class=\"hljs-keyword\">let</span> <span class=\"hljs-attr\">data</span>: <span class=\"hljs-title class_\">ProjectorData</span> = <span class=\"hljs-literal\">undefined</span>;\n        <span class=\"hljs-keyword\">try</span> {\n            <span class=\"hljs-keyword\">if</span> (fs.<span class=\"hljs-title function_\">existsSync</span>(config.<span class=\"hljs-property\">config</span>)) {\n                data = <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">parse</span>(fs.<span class=\"hljs-title function_\">readFileSync</span>(config.<span class=\"hljs-property\">config</span>).<span class=\"hljs-title function_\">toString</span>());\n            }\n        } <span class=\"hljs-keyword\">catch</span> {\n            data = <span class=\"hljs-literal\">undefined</span>;\n        }\n\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Projector</span>(config, data);\n    }\n}\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"did-you-eat-your-vegetables\">Did you eat your vegetables?</h3>\n<p>Lets test</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"your-tests-could-look-like\">Your tests could look like</h3>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Operation</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../config&quot;</span>;\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Projector</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;../projector&quot;</span>;\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getConfig</span>(<span class=\"hljs-params\">pwd: <span class=\"hljs-built_in\">string</span></span>) {\n    <span class=\"hljs-keyword\">return</span> {\n        pwd,\n        <span class=\"hljs-attr\">config</span>: <span class=\"hljs-string\">&quot;/foo/bar/baz&quot;</span>,\n        <span class=\"hljs-attr\">operation</span>: <span class=\"hljs-title class_\">Operation</span>.<span class=\"hljs-property\">Add</span>,\n        <span class=\"hljs-attr\">arguments</span>: [],\n    };\n}\n\n<span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">getData</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-attr\">projector</span>: {\n            <span class=\"hljs-string\">&quot;/foo/bar/baz/buzz&quot;</span>: {\n                <span class=\"hljs-string\">&quot;foo&quot;</span>: <span class=\"hljs-string\">&quot;bar1&quot;</span>\n            },\n            <span class=\"hljs-string\">&quot;/foo/bar/baz&quot;</span>: {\n                <span class=\"hljs-string\">&quot;foo&quot;</span>: <span class=\"hljs-string\">&quot;bar2&quot;</span>\n            },\n            <span class=\"hljs-string\">&quot;/foo/bar&quot;</span>: {\n                <span class=\"hljs-string\">&quot;foo&quot;</span>: <span class=\"hljs-string\">&quot;bar3&quot;</span>\n            },\n            <span class=\"hljs-string\">&quot;/foo&quot;</span>: {\n                <span class=\"hljs-string\">&quot;foo&quot;</span>: <span class=\"hljs-string\">&quot;bar4&quot;</span>\n            },\n            <span class=\"hljs-string\">&quot;/&quot;</span>: {\n                <span class=\"hljs-string\">&quot;foo&quot;</span>: <span class=\"hljs-string\">&quot;bar5&quot;</span>,\n                <span class=\"hljs-string\">&quot;bar&quot;</span>: <span class=\"hljs-string\">&quot;bazz1&quot;</span>,\n            },\n        }\n    }\n}\n\n<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;getting values&quot;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">const</span> projector = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Projector</span>(<span class=\"hljs-title function_\">getConfig</span>(<span class=\"hljs-string\">&quot;/foo/bar&quot;</span>), <span class=\"hljs-title function_\">getData</span>());\n\n    <span class=\"hljs-title function_\">expect</span>(projector.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&quot;bar3&quot;</span>);\n    <span class=\"hljs-title function_\">expect</span>(projector.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;blaz&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-literal\">undefined</span>);\n    <span class=\"hljs-title function_\">expect</span>(projector.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;bar&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&quot;bazz1&quot;</span>);\n});\n\n<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;setting values&quot;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">const</span> projector = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Projector</span>(<span class=\"hljs-title function_\">getConfig</span>(<span class=\"hljs-string\">&quot;/foo/bar&quot;</span>), <span class=\"hljs-title function_\">getData</span>());\n\n    <span class=\"hljs-title function_\">expect</span>(projector.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&quot;bar3&quot;</span>);\n    projector.<span class=\"hljs-title function_\">setValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>, <span class=\"hljs-string\">&quot;barNever&quot;</span>);\n    <span class=\"hljs-title function_\">expect</span>(projector.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&quot;barNever&quot;</span>);\n\n    <span class=\"hljs-keyword\">const</span> p2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Projector</span>(<span class=\"hljs-title function_\">getConfig</span>(<span class=\"hljs-string\">&quot;/foo&quot;</span>), <span class=\"hljs-title function_\">getData</span>());\n    <span class=\"hljs-title function_\">expect</span>(p2.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&quot;bar4&quot;</span>);\n\n    <span class=\"hljs-keyword\">const</span> p3 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Projector</span>(<span class=\"hljs-title function_\">getConfig</span>(<span class=\"hljs-string\">&quot;/foo/bar/baz&quot;</span>), <span class=\"hljs-title function_\">getData</span>());\n    <span class=\"hljs-title function_\">expect</span>(p3.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&quot;bar2&quot;</span>);\n});\n\n<span class=\"hljs-title function_\">test</span>(<span class=\"hljs-string\">&quot;deleting values&quot;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-keyword\">const</span> projector = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Projector</span>(<span class=\"hljs-title function_\">getConfig</span>(<span class=\"hljs-string\">&quot;/foo/bar/baz&quot;</span>), <span class=\"hljs-title function_\">getData</span>());\n\n    <span class=\"hljs-title function_\">expect</span>(projector.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&quot;bar2&quot;</span>);\n    projector.<span class=\"hljs-title function_\">deleteValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>);\n    <span class=\"hljs-title function_\">expect</span>(projector.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&quot;bar3&quot;</span>);\n    projector.<span class=\"hljs-title function_\">deleteValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>);\n    <span class=\"hljs-title function_\">expect</span>(projector.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&quot;bar3&quot;</span>);\n\n    <span class=\"hljs-keyword\">const</span> p2 = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-title class_\">Projector</span>(<span class=\"hljs-title function_\">getConfig</span>(<span class=\"hljs-string\">&quot;/foo/bar&quot;</span>), <span class=\"hljs-title function_\">getData</span>());\n    <span class=\"hljs-title function_\">expect</span>(p2.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&quot;bar3&quot;</span>);\n    p2.<span class=\"hljs-title function_\">deleteValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>);\n    <span class=\"hljs-title function_\">expect</span>(p2.<span class=\"hljs-title function_\">getValue</span>(<span class=\"hljs-string\">&quot;foo&quot;</span>)).<span class=\"hljs-title function_\">toEqual</span>(<span class=\"hljs-string\">&quot;bar4&quot;</span>);\n});\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"onto-the-gopher\">Onto the Gopher!</h3>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n\n","slug":"typescript-projector","title":"Typescript Projector","section":"The Projector object","icon":"dumpster-fire","filePath":"/home/runner/work/ts-go-rust/ts-go-rust/lessons/07-projector/A-typescript-projector.md","nextSlug":"/ts-go-rust/lessons/projector/golang-projector","prevSlug":"/ts-go-rust/lessons/test-it/thoughts"}},"__N_SSG":true}