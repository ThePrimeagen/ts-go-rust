{"pageProps":{"post":{"attributes":{"title":"Rust is the bestest","description":"finally back to the best programming ever"},"html":"<h3 id=\"some-intro-i-didnt-write\">Some intro i didn&#39;t write</h3>\n<p>TODO: the thing we leave in which we never fix</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"we-will-write-it-in-two-phases\">We will write it in two phases</h3>\n<ul>\n<li>Saving the data</li>\n<li>The main control file</li>\n</ul>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"the-projector-file\">The projector file</h3>\n<p>this is where i feel our good decisions start to compound</p>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-keyword\">pub</span> <span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">save</span>(&amp;<span class=\"hljs-keyword\">self</span>) <span class=\"hljs-punctuation\">-&gt;</span> <span class=\"hljs-type\">Result</span>&lt;()&gt; {\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">result</span> = serde_json::<span class=\"hljs-title function_ invoke__\">to_string</span>(&amp;<span class=\"hljs-keyword\">self</span>.data)?;\n    <span class=\"hljs-comment\">// todo... mkdir</span>\n    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">Some</span>(p) = <span class=\"hljs-keyword\">self</span>.config.config.<span class=\"hljs-title function_ invoke__\">parent</span>() {\n        <span class=\"hljs-keyword\">if</span> std::fs::<span class=\"hljs-title function_ invoke__\">metadata</span>(p).<span class=\"hljs-title function_ invoke__\">is_err</span>() {\n            std::fs::<span class=\"hljs-title function_ invoke__\">create_dir_all</span>(p).<span class=\"hljs-title function_ invoke__\">ok</span>();\n        }\n    }\n\n    std::fs::<span class=\"hljs-title function_ invoke__\">write</span>(&amp;<span class=\"hljs-keyword\">self</span>.config.config, result)?;\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_ invoke__\">Ok</span>(());\n}\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"the-main-file\">The main file</h3>\n<p>Tying it all together</p>\n<pre><code class=\"hljs language-rust\"><span class=\"hljs-keyword\">use</span> clap::StructOpt;\n<span class=\"hljs-keyword\">use</span> rust::{opts::ProjectorOpts, config::{ProjectorConfig, Operation}, error::ProjectorError, projector::Projector};\n\n<span class=\"hljs-keyword\">fn</span> <span class=\"hljs-title function_\">main</span>() <span class=\"hljs-punctuation\">-&gt;</span> <span class=\"hljs-type\">Result</span>&lt;(), ProjectorError&gt; {\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-variable\">config</span>: ProjectorConfig = ProjectorOpts::<span class=\"hljs-title function_ invoke__\">parse</span>().<span class=\"hljs-title function_ invoke__\">try_into</span>()?;\n    <span class=\"hljs-keyword\">let</span> <span class=\"hljs-keyword\">mut </span><span class=\"hljs-variable\">proj</span> = Projector::<span class=\"hljs-title function_ invoke__\">load_from_disk</span>(&amp;config)?;\n\n    <span class=\"hljs-keyword\">match</span> &amp;config.operation {\n        Operation::<span class=\"hljs-title function_ invoke__\">Add</span>((k, v)) =&gt; {\n            proj.<span class=\"hljs-title function_ invoke__\">set_value</span>(k, v.<span class=\"hljs-title function_ invoke__\">clone</span>());\n            proj.<span class=\"hljs-title function_ invoke__\">save</span>(&amp;config)?;\n        },\n        Operation::<span class=\"hljs-title function_ invoke__\">Print</span>(k) =&gt; {\n            <span class=\"hljs-keyword\">match</span> proj.<span class=\"hljs-title function_ invoke__\">get_value</span>(k) {\n                <span class=\"hljs-title function_ invoke__\">Some</span>(v) =&gt; <span class=\"hljs-built_in\">println!</span>(<span class=\"hljs-string\">&quot;{}&quot;</span>, v),\n                <span class=\"hljs-literal\">None</span> =&gt; eprintln!(<span class=\"hljs-string\">&quot;key {} not found&quot;</span>, k),\n            }\n        }\n        Operation::<span class=\"hljs-title function_ invoke__\">Remove</span>(k) =&gt; {\n            proj.<span class=\"hljs-title function_ invoke__\">remove_value</span>(k);\n            proj.<span class=\"hljs-title function_ invoke__\">save</span>(&amp;config)?;\n        }\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title function_ invoke__\">Ok</span>(());\n}\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"wowza\">Wowza!</h3>\n<p>We actually finished!</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n","slug":"rust-4-real","title":"Rust is the bestest","section":"Tying it all together","icon":"dumpster-fire","filePath":"/home/runner/work/ts-go-rust/ts-go-rust/lessons/08-tying-it-together/C-rust-4-real.md","nextSlug":"/ts-go-rust/lessons/outro/that-is-it","prevSlug":"/ts-go-rust/lessons/tying-it-together/gopher-time"}},"__N_SSG":true}