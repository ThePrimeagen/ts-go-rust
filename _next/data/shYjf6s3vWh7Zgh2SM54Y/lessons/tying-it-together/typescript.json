{"pageProps":{"post":{"attributes":{"title":"Typescript Projector","description":"So now its time to create the project"},"html":"<h3 id=\"time-to-tie-it-all-together\">Time to tie it all together</h3>\n<p>The last part is to take this little library we wrote and make it do the actual\noperations.</p>\n<p>For add and remove, they both need to update the config file which may or may\nnot exist.</p>\n<p>For print operations, we need to simply print off the results</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"the-ascii-diagram-again\">The ascii diagram again.</h3>\n<pre><code>                                                  v &lt;-- you are here\n                                                        such clossness\n                                                        much progress\n   +----------+    +----------+      +----------+    +----------+\n   | cli opts | -&gt; | project  | -+-&gt; |  print   | -&gt; | display  |\n   +----------+    |  config  |  |   +----------+    +----------+\n                   +----------+  |\n                                 |   +----------+    +----------+\n                                 +-&gt; |   add    | -&gt; |   save   |\n                                 |   +----------+    +----------+\n                                 |\n                                 |   +----------+    +----------+\n                                 +-&gt; |    rm    | -&gt; |   save   |\n                                     +----------+    +----------+\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"lets-work-through-the-config-saving-first\">Lets work through the config saving first</h3>\n<p>lets have projector take care of saving.</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> fs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;fs&quot;</span>;\n\n<span class=\"hljs-comment\">// ..</span>\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Projector</span> {\n    <span class=\"hljs-comment\">// ...</span>\n    <span class=\"hljs-title function_\">save</span>(<span class=\"hljs-params\"></span>) {\n        fs.<span class=\"hljs-title function_\">writeFileSync</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">config</span>.<span class=\"hljs-property\">config</span>, <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">data</span>));\n    }\n\n    <span class=\"hljs-comment\">// ...</span>\n}\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"the-main-file\">The main file</h3>\n<p>I tend to like to do all the linking / printing / saving / whatever is &quot;harder&quot;\nto test in the main file.  Its a personal style, you don&#39;t have to do it this\nway or am I recommending it as a good way to go</p>\n<pre><code class=\"hljs language-typescript\"><span class=\"hljs-keyword\">import</span> { parseCLIOptions } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./opts&quot;</span>;\n<span class=\"hljs-keyword\">import</span> getProjectorConfig, { <span class=\"hljs-title class_\">Operation</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./config&quot;</span>\n<span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">Projector</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;./projector&quot;</span>;\n\n<span class=\"hljs-keyword\">const</span> config = <span class=\"hljs-title function_\">getProjectorConfig</span>(<span class=\"hljs-title function_\">parseCLIOptions</span>());\n<span class=\"hljs-keyword\">const</span> projector = <span class=\"hljs-title class_\">Projector</span>.<span class=\"hljs-title function_\">fromConfig</span>(config);\n\n<span class=\"hljs-comment\">// we need to be able to operate on operations</span>\n<span class=\"hljs-keyword\">switch</span> (config.<span class=\"hljs-property\">operation</span>) {\n<span class=\"hljs-keyword\">case</span> <span class=\"hljs-title class_\">Operation</span>.<span class=\"hljs-property\">Print</span>:\n    <span class=\"hljs-keyword\">const</span> value = projector.<span class=\"hljs-title function_\">getValue</span>(config.<span class=\"hljs-property\">arguments</span>[<span class=\"hljs-number\">0</span>]);\n    <span class=\"hljs-keyword\">if</span> (value !== <span class=\"hljs-literal\">undefined</span>) {\n        <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(value);\n    }\n    <span class=\"hljs-keyword\">break</span>;\n\n<span class=\"hljs-keyword\">case</span> <span class=\"hljs-title class_\">Operation</span>.<span class=\"hljs-property\">Add</span>:\n    projector.<span class=\"hljs-title function_\">setValue</span>(config.<span class=\"hljs-property\">arguments</span>[<span class=\"hljs-number\">0</span>], config.<span class=\"hljs-property\">arguments</span>[<span class=\"hljs-number\">1</span>]);\n    projector.<span class=\"hljs-title function_\">save</span>();\n    <span class=\"hljs-keyword\">break</span>;\n\n<span class=\"hljs-keyword\">case</span> <span class=\"hljs-title class_\">Operation</span>.<span class=\"hljs-property\">Remove</span>:\n    projector.<span class=\"hljs-title function_\">deleteValue</span>(config.<span class=\"hljs-property\">arguments</span>[<span class=\"hljs-number\">0</span>]);\n    projector.<span class=\"hljs-title function_\">save</span>();\n    <span class=\"hljs-keyword\">break</span>;\n}\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"onto-the-gophers\">Onto the gophers</h3>\n<p>Have i shown you this image? Gross huh?</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n","slug":"typescript","title":"Typescript Projector","section":"Tying it all together","icon":"dumpster-fire","filePath":"/home/runner/work/ts-go-rust/ts-go-rust/lessons/08-tying-it-together/A-typescript.md","nextSlug":"/ts-go-rust/lessons/tying-it-together/gopher-time","prevSlug":"/ts-go-rust/lessons/projector/discussion-time"}},"__N_SSG":true}