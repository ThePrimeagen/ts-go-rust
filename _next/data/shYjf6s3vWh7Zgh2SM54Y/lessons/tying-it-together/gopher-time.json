{"pageProps":{"post":{"attributes":{"title":"Golang","description":"We are finishing up the whole thing"},"html":"<h3 id=\"some-intro-i-didnt-write\">Some intro i didn&#39;t write</h3>\n<p>TODO: the thing we leave in which we never fix</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"we-will-write-it-in-two-phases\">We will write it in two phases</h3>\n<ul>\n<li>Saving the data</li>\n<li>The main control file</li>\n</ul>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"the-projector-file\">The projector file</h3>\n<pre><code class=\"hljs language-go\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-params\">(p *Projector)</span></span> Save() <span class=\"hljs-type\">error</span> {\n    dir := path.Dir(p.config.Config)\n    <span class=\"hljs-keyword\">if</span> _, err := os.Stat(dir); os.IsNotExist(err) {\n        os.MkdirAll(dir, fs.FileMode(<span class=\"hljs-number\">0755</span>))\n    }\n\n    bytes, err := json.Marshal(p.data)\n    <span class=\"hljs-keyword\">if</span> err != <span class=\"hljs-literal\">nil</span> {\n        <span class=\"hljs-keyword\">return</span> err\n    }\n\n    os.WriteFile(p.config.Config, bytes, fs.FileMode(<span class=\"hljs-number\">0755</span>))\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">nil</span>\n}\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"the-main-file\">The main file</h3>\n<p>This is the file that is the executable, lets use that to put everything together.</p>\n<pre><code class=\"hljs language-go\"><span class=\"hljs-keyword\">package</span> main\n\n<span class=\"hljs-keyword\">import</span> (\n    <span class=\"hljs-string\">&quot;fmt&quot;</span>\n    <span class=\"hljs-string\">&quot;log&quot;</span>\n    <span class=\"hljs-string\">&quot;os&quot;</span>\n\n    <span class=\"hljs-string\">&quot;github.com/theprimeagen/projector/pkg/projector&quot;</span>\n)\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">func</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span></span> {\n    opts, err := projector.GetOptions()\n    <span class=\"hljs-keyword\">if</span> err != <span class=\"hljs-literal\">nil</span> {\n        log.Fatalf(<span class=\"hljs-string\">&quot;error: %v&quot;</span>, err)\n    }\n\n    config, err := projector.NewProjectorConfig(opts)\n    <span class=\"hljs-keyword\">if</span> err != <span class=\"hljs-literal\">nil</span> {\n        log.Fatalf(<span class=\"hljs-string\">&quot;error: %v&quot;</span>, err)\n    }\n\n    prj, err := projector.FromConfig(config)\n    <span class=\"hljs-keyword\">if</span> err != <span class=\"hljs-literal\">nil</span> {\n        log.Fatalf(<span class=\"hljs-string\">&quot;error: %v&quot;</span>, err)\n    }\n\n    <span class=\"hljs-keyword\">switch</span> config.Operation {\n    <span class=\"hljs-keyword\">case</span> projector.Add:\n        prj.SetValue(config.Arguments[<span class=\"hljs-number\">0</span>], config.Arguments[<span class=\"hljs-number\">1</span>])\n        prj.Save(config)\n    <span class=\"hljs-keyword\">case</span> projector.Remove:\n        prj.RemoveValue(config.Arguments[<span class=\"hljs-number\">0</span>])\n        prj.Save(config)\n    <span class=\"hljs-keyword\">case</span> projector.Print:\n        value, found := prj.GetValue(config.Arguments[<span class=\"hljs-number\">0</span>])\n        <span class=\"hljs-keyword\">if</span> found {\n            fmt.Print(value)\n        } <span class=\"hljs-keyword\">else</span> {\n            fmt.Fprintf(os.Stderr, <span class=\"hljs-string\">&quot;Could not find results for %v&quot;</span>, config.Arguments[<span class=\"hljs-number\">0</span>])\n        }\n    }\n}\n</code></pre>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n<h3 id=\"rust-is-the-greatest-the-bestest\">Rust is the greatest, the bestest!!</h3>\n<p>GO FORTH WITH RUSTACEASOUSNESSES</p>\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n<br />\n\n","slug":"gopher-time","title":"Golang","section":"Tying it all together","icon":"dumpster-fire","filePath":"/home/runner/work/ts-go-rust/ts-go-rust/lessons/08-tying-it-together/B-gopher-time.md","nextSlug":"/ts-go-rust/lessons/tying-it-together/rust-4-real","prevSlug":"/ts-go-rust/lessons/tying-it-together/typescript"}},"__N_SSG":true}